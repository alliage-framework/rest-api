// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Main scenario Rest API should provide a OpenAPI spec 1`] = `
Object {
  "info": Object {
    "contact": Object {
      "email": "support@example.com",
      "name": "API Support",
      "url": "http://www.example.com/support",
    },
    "description": "Describe what your API does here...",
    "license": Object {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0.html",
    },
    "title": "Alliage REST API",
    "version": "1.0.0",
  },
  "openapi": "3.0.3",
  "paths": Object {
    "/api/hello/:name": Object {
      "post": Object {
        "parameters": Object {
          "language": Object {
            "in": "query",
            "required": false,
            "schema": Object {
              "enum": Array [
                "fr",
                "en",
              ],
              "type": "string",
            },
          },
          "name": Object {
            "in": "path",
            "required": true,
            "schema": Object {
              "pattern": "[a-zA-Z]+",
              "type": "string",
            },
          },
        },
        "requestBody": Object {
          "additionalProperties": false,
          "properties": Object {
            "age": Object {
              "type": "number",
            },
          },
          "required": Array [
            "age",
          ],
          "type": "object",
        },
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "additionalProperties": false,
                  "properties": Object {
                    "message": Object {
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "message",
                  ],
                  "type": "object",
                },
              },
            },
          },
        },
      },
    },
  },
}
`;

exports[`Main scenario Schema generation With builder task should generate a schema from the controllers types 1`] = `
Object {
  "post": Array [
    Object {
      "actionMetadata": Object {
        "bodyType": Object {
          "additionalProperties": false,
          "properties": Object {
            "age": Object {
              "type": "number",
            },
          },
          "required": Array [
            "age",
          ],
          "type": "object",
        },
        "controllerName": "MainController",
        "defaultStatusCode": 200,
        "errors": Array [],
        "name": "sayHello",
        "paramsType": Object {
          "additionalProperties": false,
          "properties": Object {
            "name": Object {
              "pattern": "[a-zA-Z]+",
              "type": "string",
            },
          },
          "required": Array [
            "name",
          ],
          "type": "object",
        },
        "queryType": Object {
          "additionalProperties": false,
          "properties": Object {
            "language": Object {
              "enum": Array [
                "fr",
                "en",
              ],
              "type": "string",
            },
          },
          "type": "object",
        },
        "returnType": Object {
          "additionalProperties": false,
          "properties": Object {
            "message": Object {
              "type": "string",
            },
          },
          "required": Array [
            "message",
          ],
          "type": "object",
        },
        "validateInput": true,
        "validateOutput": true,
      },
      "path": "/api/hello/:name",
      "pattern": "/^\\\\/api\\\\/hello(?:\\\\/([^\\\\/#\\\\?]+?))[\\\\/#\\\\?]?$/i",
    },
  ],
}
`;

exports[`Main scenario Schema generation With process should generate a schema from the controllers types 1`] = `
Object {
  "post": Array [
    Object {
      "actionMetadata": Object {
        "bodyType": Object {
          "additionalProperties": false,
          "properties": Object {
            "age": Object {
              "type": "number",
            },
          },
          "required": Array [
            "age",
          ],
          "type": "object",
        },
        "controllerName": "MainController",
        "defaultStatusCode": 200,
        "errors": Array [],
        "name": "sayHello",
        "paramsType": Object {
          "additionalProperties": false,
          "properties": Object {
            "name": Object {
              "pattern": "[a-zA-Z]+",
              "type": "string",
            },
          },
          "required": Array [
            "name",
          ],
          "type": "object",
        },
        "queryType": Object {
          "additionalProperties": false,
          "properties": Object {
            "language": Object {
              "enum": Array [
                "fr",
                "en",
              ],
              "type": "string",
            },
          },
          "type": "object",
        },
        "returnType": Object {
          "additionalProperties": false,
          "properties": Object {
            "message": Object {
              "type": "string",
            },
          },
          "required": Array [
            "message",
          ],
          "type": "object",
        },
        "validateInput": true,
        "validateOutput": true,
      },
      "path": "/api/hello/:name",
      "pattern": "/^\\\\/api\\\\/hello(?:\\\\/([^\\\\/#\\\\?]+?))[\\\\/#\\\\?]?$/i",
    },
  ],
}
`;
